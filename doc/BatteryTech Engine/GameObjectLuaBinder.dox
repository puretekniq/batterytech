#ifdef DOXYGEN
class GameObject {
public:
/**
 * \brief Function
 *
 * \ingroup GameObject
 */
GameObject::cInit();
/**
 * \brief Function
 *
 * \ingroup GameObject
 */
GameObject::cDeactivate(); // once an object is deactivated, no further calls may be made on it or its luabinder or crashes will occur

// 3D Animation functions
/**
 * \brief Function
 *
 * \ingroup Animation3D
 */
GameObject::anim_allocAnimations(); // allocates n animations
/**
 * \brief Function
 *
 * \ingroup Animation3D
 */
GameObject::anim_initDynamic(); // initializes animation n for dynamic model x
/**
 * \brief Function
 *
 * \ingroup Animation3D
 */
GameObject::anim_interpolate(); // interpolates animation n at time x

// b2Body
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_createBody();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_removeBody();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_setBodyTransform();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_setBodyAngularVelocity();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_setBodyLinearVelocity();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_setBodyAngularDamping();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_setBodyLinearDamping();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_setBodyAllowSleep();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_setBodyAwake();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_setBodyFixedRotation();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_setBodyBullet();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_setBodyActive();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_setBodyType();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_setBodyGravityScale();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_getBodyTransform();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_getBodyAngularVelocity();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_getBodyLinearVelocity();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_getBodyWorldPoint();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_getBodyWorldPoints();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_getBodyLocalPoint();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_getBodyLocalCenter();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_applyForce();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_applyTorque();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_applyLinearImpulse();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_applyAngularImpulse();
// b2Shape and b2Fixture
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_createPolygonFixture();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_createCircleFixture();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_createChainFixture();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_removeFixture();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_setFixtureDensity();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_setFixtureFriction();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_setFixtureRestitution();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_setFixtureIsSensor();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_setFixtureFilter();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_fixtureTestPoint();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::physics_getFixtureBodyId();
// collision query
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::queryPhysicsContacts();
// collision callbacks
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::setPhysicsCallbackDetail();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::countPhysicsContacts();
/**
 * \brief Function
 *
 * \ingroup Physics
 */
GameObject::getPhysicsContact();
}
#endif
