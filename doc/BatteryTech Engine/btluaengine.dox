// this file is only for doxygen

namespace BTLuaEngine {

/** \mainpage Welcome to %BatteryTech Engine
 *
 * \section gettingstarted_sec Getting Started
 *
 * About Windows vs Mac
 *
 * \section overview_sec Platform Overview
 *
 * \section tools_sec Tools support
 *
 * %BatteryTech adds support for a file format we call .BAI which stands for "Binary Asset Importer" and is effectively a light serialized format of the aiScene
 * structure that the Open Asset Importer provides.  We provide a tool called BAIConvert which can take OBJ and DAE (or other formats if you link in the source
 * from Assimp) and output a BAI which will usually be smaller, be optimized and load faster than the original file.  It is a format suitable for production use.
 *
 * BMFont
 *
 * TexturePacker
 *
 *
 */


// now let's define groups

/**
 * \defgroup ScriptEntry Script Entry Points
 * \brief How the engine starts running the Lua script files
 *
 * Required file: main.lua
 * Create instance of Game
 */

/**
 * \defgroup Configuring Configuring the Engine
 * \brief Setting various options for your game
 */

/**
 * \defgroup LoadingResources Loading Resources
 * \brief How to get your assets into the engine
 *
 * \defgroup AssetLocations Asset Locations
 * \brief Where assets (graphics, sounds, resource files) can be located and system features involving them
 * \ingroup LoadingResources
 *
 * \defgroup Loading2DGraphics 2D Graphics
 * \brief How to load 2D images (textures) and configure OpenGL settings for them
 * \ingroup LoadingResources
 *
 * \defgroup LoadingSounds Sounds
 * \brief How to load sounds
 * \ingroup LoadingResources
 *
 * \defgroup Loading3DModels 3D Models
 * \brief How to load 3D Models (OBJ, Collada) and details on file formats
 * \ingroup LoadingResources
 *
 * \defgroup LoadingFonts Fonts
 * \brief How to load TrueType and BMFonts
 * \ingroup LoadingResources
 *
 *
 * \addtogroup LoadingResources
 *
 * Talk about the loading phase...
 * addNewResources()
 */

/**
 * \defgroup Rendering Rendering
 * \brief How The BatteryTech Engine composites 2D, 3D and Font-based graphics
 * \defgroup Rendering2D 2D
 * \brief How to render 2D Graphics
 * \ingroup Rendering
 *
 * \defgroup Rendering3D 3D
 * \brief How to render 3D Graphics
 * \ingroup Rendering
 * Camera, Lighting, Shadows, Matrices
 *
 * \defgroup Animation3D 3D Animation
 * \brief Using Hardware-accelerated 3D Animation
 * \ingroup Rendering3D
 *
 * \defgroup TextRendering Text
 * \brief Rendering 2D Fonts
 * \ingroup Rendering
 * 
 * \defgroup RenderOptions Render Options
 * \brief Setting options for render items
 * \ingroup Rendering
 *
 * \defgroup Particles Particle Systems
 * \brief Configuring 2D and 3D particle systems
 * \ingroup Rendering
 * \defgroup GameObject GameObjects
 * \brief GameObjects provide integration between per-entity C functionality and Lua functionality
 */

/**
 * \defgroup Input Input
 * \brief Retrieving keyboard, touch, mouse and accelerometer input
 *
 * \defgroup Audio Sound And Music
 * \brief Playing sounds and music
 *
 * \defgroup FileIO File IO
 * \brief Reading and Writing files
 *
 * \defgroup PlatformHooks Platform Hooks And Callbacks
 * \brief Adding custom behavior for a specific platform using hooks and callbacks
 *
 * \defgroup UI User Interface
 * \brief Adding buttons and controls to your game
 *
 * \defgroup Vibration Vibration and Haptics Feedback
 * \brief Controlling the vibration hardware of a device
 *
 * \defgroup Video Video playback integration
 * \brief Functions for controlling platform-integrated video playback
 */

/**
 * \defgroup Physics 2D Collisions and Physics
 * \brief Using the integrated Box2D physics engine
 *
 */

/**
 * \defgroup Performance Performance Considerations
 * \brief Notes on how to keep a high framerate on many devices
 */

/**
 * \defgroup OtherFunctions Other Functions
 * \brief Functions not documented in other modules
 */
}

